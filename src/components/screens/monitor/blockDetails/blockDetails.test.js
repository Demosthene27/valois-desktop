import React from 'react';
import { mount } from 'enzyme';
import BlockDetails from './blockDetails';
import blocks from '../../../../../test/constants/blocks';

describe('BlockDetails page', () => {
  let wrapper;
  const props = {
    t: key => key,
    blockDetails: {
      isLoading: false,
      data: {
        data: blocks,
      },
      loadData: jest.fn(),
      error: false,
    },
  };

  beforeEach(() => {
    wrapper = mount(<BlockDetails {...props} />);
  });

  it('renders a page properly without errors', () => {
    expect(wrapper.find('h1')).toHaveText('Block details');
    expect(wrapper).toContainMatchingElements(2, 'TableRow');
    expect(wrapper.find('label').at(0)).toHaveText('Block ID');
    expect(wrapper.find('span.copy-title').at(0)).toHaveText(blocks[0].id);
    expect(wrapper.find('label').at(1)).toHaveText('Height');
    expect(wrapper.find('label').at(2)).toHaveText('Version');
    expect(wrapper.find('label').at(3)).toHaveText('Confirmations');
    expect(wrapper.find('label').at(4)).toHaveText('Reward');
    expect(wrapper.find('label').at(5)).toHaveText('Total fee');
    expect(wrapper.find('label').at(6)).toHaveText('Total forged');
    expect(wrapper.find('label').at(7)).toHaveText('Total amount');
    expect(wrapper.find('label').at(8)).toHaveText('Date');
    expect(wrapper.find('label').at(9)).toHaveText('Generated by');
  });

  it('renders a page with error', () => {
    const newProps = {
      ...props,
      blockDetails: {
        ...props.blockDetails,
        error: true,
      },
    };
    wrapper = mount(<BlockDetails {...newProps} />);
    expect(wrapper.find('h1')).toHaveText('Block details');
    expect(wrapper).toContainMatchingElement('Feedback');
    expect(wrapper.find('span').at(0)).toHaveText('Failed to load block details.');
  });
});
